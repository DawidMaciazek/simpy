import logging
log = logging.getLogger(__name__)


class xyz:
    def __init__(self, filename):
        try:
            self.filename = filename
            log.info("Successfully opened file for writing: %s" % filename)
            self.outfile = open(filename, 'w')
        except IOError:
            log.error("Could not open file for writing: %s" % filename)

    def write(self, types, atoms, extra=None,
              comment="generated by sympy lib"):
        outfile = self.outfile
        atoms_n = len(atoms)
        types_n = len(types)

        if atoms_n != types_n:
            log.error("Atoms and type list have different length:"
                      "\natoms: %i \ntypes: %i" % (atoms_n, types_n))


        if not extra:
            outfile.write("%i\n%s\n" % (atoms_n, str(comment)))
            for i in xrange(atoms_n):
                outfile.write("%s %f %f %f\n" %
                              (types[i], atoms[i][0], atoms[i][1], atoms[i][2]))
        else:
            extra_n = len(extra)
            if atoms_n != extra_n:
                log.error("Extra list have different length than type or atoms"
                          "list\natoms: %i \ntypes: %i \nextra: %i"
                          % (atoms_n, types_n, extra_n))

            outfile.write("%i\n%s\n" % (atoms_n, str(comment)))
            for i in xrange(atoms_n):
                outfile.write("%s %f %f %f %s\n" %
                              (types[i], atoms[i][0], atoms[i][1], atoms[i][2],
                               extra[i]))

    def close(self):
        try:
            self.outfile.close()
            log.info("Successfully saved file: %s" % self.filename)
        except IOError:
            log.error("Problems encountered when closing file: %s" %
                      self.filename)


class lmpdat:
    def __init__(self, filename):
        self.filename = filename
